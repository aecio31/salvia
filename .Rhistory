# Imprimir resultados del ANOVA
print(summary(resultado_anova))
# Realizar prueba de Tukey
resultado_tukey <- TukeyHSD(resultado_anova)
# Imprimir resultados de la prueba de Tukey
print(resultado_tukey)
# Gráfico de cajas y bigotes
boxplot(Promedio ~ Sitio, data = promedios, main = "Boxplot de Promedios por Sitio", ylab = "Promedio", col = "lightblue")
# Agregar asteriscos a los grupos significativamente diferentes según Tukey
letters <- letters[1:6]
signif <- as.character(letters[resultado_tukey$group])
text(1:6, max(promedios$Promedio) - 2, labels = signif, cex = 1.5, col = "red")
# Imprimir resultados de la prueba de Tukey
print(resultado_tukey)
# Gráfico de la prueba de Shapiro-Wilk
plot(shapiro_test, main = "Gráfico de Shapiro-Wilk para Residuos", col = "blue")
# Agregar asteriscos a los grupos significativamente diferentes según Tukey
letters <- letters[1:6]
signif <- as.character(letters[resultado_tukey$group])
text(1:6, max(promedios$Promedio) - 2, labels = signif, cex = 1.5, col = "red")
install.packages("car")
# Instalar los paquetes si aún no están instalados
if (!requireNamespace("car", quietly = TRUE)) {
install.packages("car")
}
if (!requireNamespace("agricolae", quietly = TRUE)) {
install.packages("agricolae")
}
# Cargar los paquetes
library(car)
library(agricolae)
# Crear un dataframe con los datos
datos <- data.frame(
Sitio_1 = c(147.5, 161, 138),
Sitio_2 = c(107, 116, 102.8),
Sitio_3 = c(175.5, 135, 123.9),
Sitio_4 = c(132, 107, 194),
Sitio_5 = c(122, 116.4, 95.6),
Sitio_6 = c(186, 61, 181.2)
)
# Verificar normalidad de los residuos
shapiro_test <- shapiro.test(resid(resultado_anova))
install.packages("car")
install.packages("car")
install.packages("car")
install.packages("car")
# Instalar los paquetes si aún no están instalados
if (!requireNamespace("car", quietly = TRUE)) {
install.packages("car")
}
if (!requireNamespace("agricolae", quietly = TRUE)) {
install.packages("agricolae")
}
# Cargar los paquetes
library(car)
library(agricolae)
# Crear un dataframe con los datos
datos <- data.frame(
Sitio_1 = c(147.5, 161, 138),
Sitio_2 = c(107, 116, 102.8),
Sitio_3 = c(175.5, 135, 123.9),
Sitio_4 = c(132, 107, 194),
Sitio_5 = c(122, 116.4, 95.6),
Sitio_6 = c(186, 61, 181.2)
)
# Verificar normalidad de los residuos
shapiro_test <- shapiro.test(resid(resultado_anova))
# Imprimir resultados de la prueba de Shapiro-Wilk
print(shapiro_test)
# Crear un nuevo dataframe con los promedios
promedios <- data.frame(
Sitio = c("Sitio_1", "Sitio_2", "Sitio_3", "Sitio_4", "Sitio_5", "Sitio_6"),
Promedio = rowMeans(datos)
)
# Realizar ANOVA
resultado_anova <- aov(Promedio ~ Sitio, data = promedios)
# Imprimir resultados del ANOVA
print(summary(resultado_anova))
# Realizar prueba de Tukey
resultado_tukey <- TukeyHSD(resultado_anova)
# Imprimir resultados de la prueba de Tukey
print(resultado_tukey)
# Gráfico de cajas y bigotes
boxplot(Promedio ~ Sitio, data = promedios, main = "Boxplot de Promedios por Sitio", ylab = "Promedio", col = "lightblue")
# Agregar asteriscos a los grupos significativamente diferentes según Tukey
letters <- letters[1:6]
signif <- as.character(letters[resultado_tukey$group])
text(1:6, max(promedios$Promedio) - 2, labels = signif, cex = 1.5, col = "red")
# Imprimir resultados de la prueba de Tukey
print(resultado_tukey)
# Gráfico de la prueba de Shapiro-Wilk
plot(shapiro_test, main = "Gráfico de Shapiro-Wilk para Residuos", col = "blue")
View(resultado_anova)
View(resultado_anova)
View(resultado_tukey)
View(promedios)
View(promedios)
View(promedios)
View(datos)
View(datos)
View(promedios)
View(resultado_anova)
View(resultado_tukey)
View(datos)
View(datos)
View(promedios)
# Mostrar el nuevo dataframe
print(datos)
# Crear un dataframe con los datos
datos <- data.frame(
Sitio_1 = c(147.5, 161, 138),
Sitio_2 = c(107, 116, 102.8),
Sitio_3 = c(175.5, 135, 123.9),
Sitio_4 = c(132, 107, 194),
Sitio_5 = c(122, 116.4, 95.6),
Sitio_6 = c(186, 61, 181.2)
)
# Alturas proporcionadas
alturas <- c(Sitio_1 = 3114, Sitio_2 = 3098, Sitio_3 = 3073, Sitio_4 = 3061, Sitio_5 = 2976, Sitio_6 = 2967)
# Cambiar los nombres de las columnas
colnames(datos) <- alturas
# Convertir el dataframe a formato largo (tidy)
library(tidyr)
datos_largo <- gather(datos, key = "Altura", value = "Longitud")
# Cargar paquetes necesarios para ANOVA y Tukey
library(tidyverse)
library(agricolae)
# Realizar ANOVA
modelo_anova <- aov(Longitud ~ Altura, data = datos_largo)
resultado_anova <- summary(modelo_anova)
# Mostrar resultados del ANOVA
print(resultado_anova)
# Realizar prueba de Tukey
resultado_tukey <- HSD.test(modelo_anova, "Altura")
print(resultado_tukey)
# Gráfica de barras para visualizar las diferencias significativas según Tukey
plot(resultado_tukey, las = 1, cex.axis = 0.7)
